@{
    ViewData["Title"] = "khachhang";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model IEnumerable<KhachHang>
<div class="right_col" role="main" style="height: 500px">
    <div class="">
        <div class="page-title">
            <div class="title_left">
                <h3>Thông tin hàng hóa</h3>
            </div>
            <div class="title_right">
                <div class="col-md-5 col-sm-5   form-group pull-right top_search">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Search for...">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button">Go!</button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        @{
            if (TempData["alertMessage"] != null)
            {
                <div style="color:red;font-size:30px">
                    @TempData["alertMessage"].ToString()
                </div>
            }
        }
        @{
            if (TempData["alertMessage1"] != null)
            {
                <div style="color:red;font-size:30px">
                    @TempData["alertMessage1"].ToString()
                </div>
            }
        }
        <div class="clearfix"></div>
        <div class="row" style="display: block;">
            <div class="col-md-12 col-sm-12 ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Hàng hóa</h2>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <a class="dropdown-item" href="#">Settings 1</a>
                                    <a class="dropdown-item" href="#">Settings 2</a>
                                </div>
                            </li>
                            <li>
                                <a class="close-link"><i class="fa fa-close"></i></a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="row">
                            <div class="col-sm-12">
                                <a asp-action="themkhachhang" asp-controller="danhmuc"><button type="button" class="btn btn-outline-dark" style="">Thêm KH</button></a>
                                <div class="card-box table-responsive">
                                    @(Html.DevExtreme().DataGrid<pmkd.Models.KhachHang>()
                                    .DataSource(ds => ds.Mvc()
                                        .Controller("Danhmuc")
                                        .LoadAction("GetKH")
                                        .InsertAction("PostKH")
                                        .UpdateAction("PutKH")
                                        .DeleteAction("DeleteKH")
                                        .Key("Idkhach", "MaKhach")
                                    )
                                    .RemoteOperations(true)
                                    .Columns(columns => {

                                        columns.AddFor(m => m.Idkhach).Visible(false);

                                        columns.AddFor(m => m.MaKhach).Fixed(true).Caption("Mã khách");

                                        columns.AddFor(m => m.TenKhach).Caption("Tên khách");

                                        columns.AddFor(m => m.TenFull).Caption("Tên đầy đủ").Visible(true);

                                        columns.AddFor(m => m.Email).Caption("Email");

                                        columns.AddFor(m => m.DiaChi).Caption("Địa chỉ").Visible(false);

                                        columns.AddFor(m => m.DienThoai).Caption("SĐT");

                                        columns.AddFor(m => m.Fax).Caption("Fax").Visible(false);

                                        columns.AddFor(m => m.MaSoThue).Caption("Mã số thuế").Visible(false);

                                        columns.AddFor(m => m.TaiKhoan).Caption("Tài khoản").Visible(false);

                                        columns.AddFor(m => m.NganHang).Caption("Ngân hàng").Visible(false);

                                        columns.AddFor(m => m.GiayPhep).Caption("Giấy phép").Visible(false);

                                        columns.AddFor(m => m.NgayCap).Caption("Ngày cấp").Visible(false);

                                        columns.AddFor(m => m.MaCn).Caption("Mã chi nhánh").Visible(false);

                                        columns.AddFor(m => m.MatHang).Caption("Mặt hàng").Visible(false);

                                        columns.Add()
                                            .Caption("Giao dịch mua")
                                            .Visible(false)
                                            .CalculateCellValue(@<text>
                                                                function(data) {
                                                                    if (data.GiaoDichMua == true)
                                                                    {
                                                                    return "Có";
                                                                    }
                                                                    else return "Không";
                                                                    }
                                                                </text>);
                                        columns.Add()
                                            .Caption("Giao dịch bán")
                                            .Visible(false)
                                            .CalculateCellValue(@<text>
                                                                function(data) {
                                                                    if (data.GiaoDichBan == true)
                                                                    {
                                                                    return "Có";
                                                                    }
                                                                    else return "Không";
                                                                    }
                                                                </text>);
                                        columns.Add()
                                            .Caption("Thanh toán mua")
                                            .Visible(false)
                                            .CalculateCellValue(@<text>
                                                                function(data) {
                                                                    if (data.ThanhToanMua == true)
                                                                    {
                                                                    return "Có";
                                                                    }
                                                                    else return "Không";
                                                                    }
                                                                </text>);
                                        columns.Add()
                                            .Caption("Thanh toán bán")
                                            .Visible(false)
                                            .CalculateCellValue(@<text>
                                                                function(data) {
                                                                    if (data.ThanhToanBan == true)
                                                                    {
                                                                    return "Có";
                                                                    }
                                                                    else return "Không";
                                                                    }
                                                                </text>);

                                        columns.AddFor(m => m.GhiChu).Caption("Ghi chú").Visible(false);

                                        columns.AddFor(m => m.GiaoDich).Caption("Giao dịch").Visible(false);

                                        columns.AddFor(m => m.MaKhuvuc).Caption("Khu vực").GroupIndex(1).Lookup(lookup => lookup
                                                .DataSource(ViewBag.khuvuc)
                                                .DisplayExpr("TenKhuvuc")
                                                .ValueExpr("MaKhuvuc")
                                                );

                                        columns.AddFor(m => m.TenQg).Caption("Tên quốc gia").GroupIndex(0).Lookup(lookup => lookup
                                                .DataSource(ViewBag.tenqg)
                                                .DisplayExpr("Name")
                                                .ValueExpr("Name")
                                                );

                                        columns.AddFor(m => m.ToaKinhTe).Caption("Mã khách").Visible(false);

                                        columns.AddFor(m => m.CreatedDate).Caption("Ngày tạo").Visible(false);

                                        columns.AddFor(m => m.CreatedBy).Caption("Người tạo").Visible(false);

                                        columns.AddFor(m => m.Vanchuyen).Caption("Vận chuyển").Visible(false);

                                        columns.AddFor(m => m.Bocxep).Caption("Bốc xếp").Visible(false);

                                        columns.AddFor(m => m.LoaiKhach).Caption("Loại khách").Visible(false);

                                        columns.AddFor(m => m.Sanluong).Caption("Sản lượng").Visible(false);

                                        columns.AddFor(m => m.Dientich).Caption("Diện tích").Visible(false);

                                    })
                                    .Editing(e => e
                                        .AllowAdding(true)
                                        .AllowUpdating(true)
                                        .AllowDeleting(true)
                                        .UseIcons(true)
                                    )
                                    .MasterDetail(m => m.Enabled(true).Template(new TemplateName("gridContainer-details")))
                                    .Selection(s => s.Mode(SelectionMode.Single))
                                    .HoverStateEnabled(true)
                                    .Export(e => e.Enabled(true))
                                    .FilterRow(filter => filter.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                    .HeaderFilter(hearder => hearder.Visible(true))
                                    .AllowColumnResizing(true)
                                    .AllowColumnReordering(true)
                                    .ColumnAutoWidth(true)
                                    .ColumnChooser(c => c.Enabled(true))
                                    .ColumnFixing(c => c.Enabled(true))
                                    .ShowBorders(true)
                                    .Grouping(group => group.AutoExpandAll(true))
                                    .SearchPanel(searchPanel => searchPanel.Visible(true))
                                    .GroupPanel(groupPanel => groupPanel.Visible(true))
                                    .Paging(paging => paging.PageSize(10))
                                    .Pager(paper =>
                                    {
                                        paper.ShowPageSizeSelector(true);
                                        paper.AllowedPageSizes(new[] { 5, 10, 20 });
                                        paper.ShowInfo(true);
                                    })
                                )
                                    @using (Html.DevExtreme().NamedTemplate("gridContainer-details"))
                                    {
                                        @(Html.DevExtreme().TabPanel()
                                            .Items(items => {
                                                items.Add()
                                                    .Title("Định mức")
                                                    .Template(new TemplateName("gridContainer-details-tab1Template"))
                                                    .Option("tabExtras", new { IDkhachhang = new JS("data.Idkhach") });

                                                items.Add()
                                                    .Title("Người đại diện")
                                                    .Template(new TemplateName("gridContainer-details-tab2Template"))
                                                    .Option("tabExtras", new { IDkhachhang = new JS("data.Idkhach") });
                                            })
                                        )
                                    }
                                    @using (Html.DevExtreme().NamedTemplate("gridContainer-details-tab1Template"))
                                    {
                                        @(Html.DevExtreme().DataGrid<pmkd.Models.CustomerNorm>()
                                            .DataSource(ds => ds.Mvc()
                                                .Controller("Danhmuc")
                                                .LoadAction("GetCN")
                                                .InsertAction("PostCN")
                                                .UpdateAction("PutCN")
                                                .DeleteAction("DeleteCN")
                                                .LoadParams(new { IDkhachhang = new JS("tabExtras.IDkhachhang") })
                                                .Key("Id")
                                            )
                                            .RemoteOperations(true)
                                            .Columns(columns => {

                                                columns.AddFor(m => m.Makhach).Caption("Mã khách").Lookup(lookup => lookup
                                                .DataSource(d => d.Mvc().Controller("lookup").LoadAction("getmakhach").Key("Idkhach"))
                                                .DisplayExpr("MaKhach")
                                                .ValueExpr("MaKhach")
                                                ); 

                                                columns.AddFor(m => m.Nhomhang).Caption("Nhóm hàng").Lookup(lookup => lookup
                                                .DataSource(d => d.Mvc().Controller("lookup").LoadAction("Getnhomhang").Key("Manhom"))
                                                .DisplayExpr("Manhom")
                                                .ValueExpr("Manhom")
                                                );

                                                columns.AddFor(m => m.ValueNorm).Caption("ĐM HH chưa giao(KGS)")
                                                                                .DataType(GridColumnDataType.Number)
                                                                                .Format(Format.FixedPoint)
                                                                                .EditorOptions(Format.FixedPoint);

                                                columns.AddFor(m => m.Macn).Caption("Đơn vị").Lookup(lookup => lookup
                                                .DataSource(d => d.Mvc().Controller("lookup").LoadAction("getdonvi").Key("Id"))
                                                .DisplayExpr("Id")
                                                .ValueExpr("Id")
                                                );

                                                columns.AddFor(m => m.NguoiGd).Caption("Người GD");

                                                columns.AddFor(m => m.ChucvuNguoigd).Caption("QH với DN");

                                                columns.AddFor(m => m.Ghichu).Caption("Ghi chú");

                                                columns.AddFor(m => m.UserCreate).Caption("Người tạo").AllowEditing(false);

                                                columns.AddFor(m => m.DateCreate).Caption("Ngày tạo").AllowEditing(false);

                                            })
                                            .Editing(e => e
                                                .AllowAdding(true)
                                                .AllowUpdating(true)
                                                .AllowDeleting(true)
                                                .UseIcons(true)
                                            )
                                            .Selection(s => s.Mode(SelectionMode.Single))
                                            .HoverStateEnabled(true)
                                            .Export(e => e.Enabled(true))
                                            .FilterRow(filter => filter.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                            .HeaderFilter(hearder => hearder.Visible(true))
                                            .AllowColumnResizing(true)
                                            .AllowColumnReordering(true)
                                            .ColumnAutoWidth(true)
                                            .ColumnChooser(c => c.Enabled(true))
                                            .ColumnFixing(c => c.Enabled(true))
                                            .ShowBorders(true)
                                            .Grouping(group => group.AutoExpandAll(true))
                                            .SearchPanel(searchPanel => searchPanel.Visible(true))
                                            .GroupPanel(groupPanel => groupPanel.Visible(true))
                                            .Paging(paging => paging.PageSize(10))
                                            .Pager(paper =>
                                            {
                                                paper.ShowPageSizeSelector(true);
                                                paper.AllowedPageSizes(new[] { 5, 10, 20 });
                                                paper.ShowInfo(true);
                                            }
                                            )
                                        )
                                    }
                                    @using (Html.DevExtreme().NamedTemplate("gridContainer-details-tab2Template"))
                                    {
                                        @(Html.DevExtreme().DataGrid<pmkd.Models.Signer>()
                                            .DataSource(ds => ds.Mvc()
                                                .Controller("Danhmuc")
                                                .LoadAction("GetSN")
                                                .InsertAction("PostSN")
                                                .UpdateAction("PutSN")
                                                .DeleteAction("DeleteSN")
                                                .Key("Id")
                                                .LoadParams(new { IDkhachhang = new JS("tabExtras.IDkhachhang") })
                                            )
                                            .RemoteOperations(true)
                                            .Columns(columns => {

                                                columns.AddFor(m => m.MaKhach).Caption("Mã khách").Lookup(lookup => lookup
                                                .DataSource(d => d.Mvc().Controller("lookup").LoadAction("getmakhach").Key("Idkhach"))
                                                .DisplayExpr("MaKhach")
                                                .ValueExpr("MaKhach")
                                                );

                                                columns.AddFor(m => m.Stt).Caption("Số thứ tự");

                                                columns.AddFor(m => m.Nguoiky).Caption("Người ký");

                                                columns.AddFor(m => m.Chucvu).Caption("Chức vụ");

                                                columns.AddFor(m => m.Uyquyen).Caption("Ủy quyền");

                                            })
                                            .Editing(e => e
                                                .AllowAdding(true)
                                                .AllowUpdating(true)
                                                .AllowDeleting(true)
                                                .UseIcons(true)
                                            )
                                            .Selection(s => s.Mode(SelectionMode.Single))
                                            .HoverStateEnabled(true)
                                            .Export(e => e.Enabled(true))
                                            .FilterRow(filter => filter.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                            .HeaderFilter(hearder => hearder.Visible(true))
                                            .AllowColumnResizing(true)
                                            .AllowColumnReordering(true)
                                            .ColumnAutoWidth(true)
                                            .ColumnChooser(c => c.Enabled(true))
                                            .ColumnFixing(c => c.Enabled(true))
                                            .ShowBorders(true)
                                            .Grouping(group => group.AutoExpandAll(true))
                                            .SearchPanel(searchPanel => searchPanel.Visible(true))
                                            .GroupPanel(groupPanel => groupPanel.Visible(true))
                                            .Paging(paging => paging.PageSize(10))
                                        )
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- /page content -->
<!-- /page content -->
<!-- footer content -->