
@{
    ViewData["Title"] = "dangkynhapkho";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model IEnumerable<Hdmb>
<div class="right_col" role="main" style="height: 500px">
    <div class="">
        <div class="page-title">
            <div class="title_left">
                <h3>Hợp đồng mua bán</h3>
            </div>
            <div class="title_right">
                <div class="col-md-5 col-sm-5   form-group pull-right top_search">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Search for...">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button">Go!</button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        @{
            if (TempData["alertMessage"] != null)
            {
                <div style="color:red;font-size:30px">
                    @TempData["alertMessage"].ToString()
                </div>
            }
        }
        @{
            if (TempData["alertMessage1"] != null)
            {
                <div style="color:red;font-size:30px">
                    @TempData["alertMessage1"].ToString()
                </div>
            }
        }
        <div class="clearfix"></div>
        <div class="row" style="display: block;">
            <div class="col-md-12 col-sm-12 ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Hợp đồng mua bán</h2>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <a class="dropdown-item" href="#">Settings 1</a>
                                    <a class="dropdown-item" href="#">Settings 2</a>
                                </div>
                            </li>
                            <li>
                                <a class="close-link"><i class="fa fa-close"></i></a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="card-box table-responsive">
                                    @(Html.DevExtreme().DataGrid<pmkd.Models.XepTai>()
                                        .ID("grid")
                                        .DataSource(d => d.Mvc().Controller("kho")
                                        .LoadAction("GetXepTai")
                                        .InsertAction("InsertXepTai")
                                        .UpdateAction("UpdateXeptai")
                                        .DeleteAction("DeleteXepTai")
                                        .Key("Id"))
                                        .Columns(columns => {

                                            columns.AddFor(m => m.SoXe).Caption("Số xe").Fixed(true);

                                            columns.AddFor(m => m.Xeptaiso).Caption("Tài");

                                            columns.AddFor(m => m.KhoId).Caption("Mã kho");

                                            columns.AddFor(m => m.KhoName).Caption("Tên kho");

                                            columns.AddFor(m => m.NgayVao).Caption("Ngày vào");

                                            columns.AddFor(m => m.Ngaycan).Caption("Ngày cân");

                                            columns.AddFor(m => m.MaKhach).Caption("Mã khách");

                                            columns.AddFor(m => m.KhachHang).Caption("Tên khách hàng").AllowEditing(false);

                                            columns.AddFor(m => m.Mahang).Caption("Mã hàng");

                                            columns.AddFor(m => m.Tenhang).Caption("Tên hàng").AllowEditing(false);

                                            columns.AddFor(m => m.HopDong).Caption("Hợp đồng");

                                            columns.AddFor(m => m.BagTypeId).Caption("Loại bao").Lookup(lookup => lookup.DataSource(d => d.Mvc().Controller("lookup").LoadAction("getloaibao").Key("BagTypeId")).DisplayExpr("Name").ValueExpr("BagTypeId"));

                                            columns.AddFor(m => m.SoBao).Caption("Số bao");

                                            columns.AddFor(m => m.TlBaobi).Caption("TL Bao");

                                            columns.AddFor(m => m.Status).Caption("Trạng thái").GroupIndex(0).Lookup(lookup => lookup.DataSource(new JS("trangthaichoxeptai")).DisplayExpr("name").ValueExpr("id"));

                                            columns.AddFor(m => m.Aprove).Caption("Duyệt mẫu").Lookup(lookup => lookup.DataSource(new JS("aprove_xeptai")).DisplayExpr("name").ValueExpr("id"));

                                            columns.AddFor(m => m.IsHoanThanh).Caption("Hoàn thành ?");

                                        })
                                        .Editing(e => e
                                            .Mode(GridEditMode.Popup)
                                            .Popup(p => p.Title("Nhập kho").ShowTitle(true).Width(700).Height(500))
                                            .AllowUpdating(true)
                                            .AllowDeleting(true)
                                            .AllowAdding(true)
                                            .UseIcons(true)

                                        )
                                        .Selection(s => s.Mode(SelectionMode.Single).Deferred(true))
                                        .HoverStateEnabled(true)
                                        .Export(e => e.Enabled(true))
                                        .FilterRow(filter => filter.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                        .HeaderFilter(hearder => hearder.Visible(true))
                                        .AllowColumnResizing(true)
                                        .AllowColumnReordering(true)
                                        .ColumnAutoWidth(true)
                                        .ColumnChooser(c => c.Enabled(true))
                                        .ColumnFixing(c => c.Enabled(true))
                                        .ShowBorders(true)
                                        .Grouping(group => group.AutoExpandAll(true))
                                        .SearchPanel(searchPanel => searchPanel.Visible(true))
                                        .GroupPanel(groupPanel => groupPanel.Visible(true))
                                        .Paging(paging => paging.PageSize(10))
                                        .Pager(paper =>
                                        {
                                            paper.ShowPageSizeSelector(true);
                                            paper.AllowedPageSizes(new[] { 5, 10, 20, 50 });
                                            paper.ShowInfo(true);
                                        })



    )
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- /page content -->
<!-- /page content -->
<!-- footer content -->
