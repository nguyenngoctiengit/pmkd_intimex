
@{
    ViewData["Title"] = "DocProcess";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="right_col" role="main" style="height: 500px">
    <div class="">
        <div class="page-title">
            <div class="title_left">
                <h3>Thông tin văn bản đến</h3>
            </div>
            <div class="title_right">
                <div class="col-md-5 col-sm-5   form-group pull-right top_search">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Search for...">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button">Go!</button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        @{
            if (TempData["alertMessage"] != null)
            {
                <div style="color:red;font-size:30px">
                    @TempData["alertMessage"].ToString()
                </div>
            }
        }
        <div class="clearfix"></div>
        <div class="row" style="display: block;">
            <div class="col-md-12 col-sm-12 ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Văn bản đến</h2>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <a class="dropdown-item" href="#">Settings 1</a>
                                    <a class="dropdown-item" href="#">Settings 2</a>
                                </div>
                            </li>
                            <li>
                                <a class="close-link"><i class="fa fa-close"></i></a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="card-box table-responsive">
                                    @(Html.DevExtreme().DataGrid<Data.Models.Trading_system.Sp_GetDocumentManage>().ID("gridContainer")
                                    .DataSource(ds => ds.Mvc()
                                        .Controller("DocProcess")
                                        .LoadAction("Get")
                                        .InsertAction("Post")
                                        .UpdateAction("Put")
                                        .DeleteAction("Delete")
                                        .Key("DocId")
                                    )
                                    .RemoteOperations(true)
                                    .Columns(columns => {

                                        columns.AddFor(m => m.NumberSign).Caption("Số / Ký hiệu");

                                        columns.AddFor(m => m.DocDate).Caption("Ngày VB").Format("dd/MM/yyyy");

                                        columns.AddFor(m => m.DateReceive).Caption("Ngày gửi").Format("dd/MM/yyyy");

                                        columns.AddFor(m => m.Contents).Caption("Tên loại và trích yếu nội dung VB");

                                        columns.AddFor(m => m.DocLevelName).Caption("Độ khẩn");

                                        columns.AddFor(m => m.UserSend).Caption("Người gửi");

                                        columns.AddFor(m => m.StyleName).Caption("Loại văn bản");

                                        columns.AddFor(m => m.TypeName).Caption("Hình thức");

                                        columns.AddFor(m => m.IsProcessReady).Caption("Trạng thái").Lookup(lookup => lookup.DataSource(new JS("IsProcessReady")).ValueExpr("id").DisplayExpr("name"));

                                        columns.Add().AllowFiltering(false)
                                        .AllowSorting(false).CellTemplate(@<text>
                                                <button type="button" onclick="AddArchive(<%= data.DocId%>)">Chuyển VB</button>
                                        </text>);

                                        columns.Add().AllowFiltering(false)
                                                 .AllowSorting(false).CellTemplate(@<text>
                                                <button type="button" onclick="DocArchive(<%= data.DocId%>)">Chuyển tiếp</button>
                                        </text>);

                                        columns.Add().AllowFiltering(false)
                                                .AllowSorting(false).CellTemplate(@<text>
                                                <button type="button" onclick="DocFeedBack(<%= data.DocId%>)">Xem VB</button>
                                        </text>);

                                        columns.Add().AllowFiltering(false)
                                                .AllowSorting(false).CellTemplate(@<text>
                                                <button type="button" onclick="DetailArchives(<%= data.DocId%>)">Re-download</button>
                                        </text>);

                                    })
                                    .HoverStateEnabled(true)
                                    .ShowBorders(true)
                                    .Selection(s => s.Mode(SelectionMode.Single).Deferred(true))
                                    .Export(e => e.Enabled(true))
                                    .FilterRow(filter => filter.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                    .HeaderFilter(hearder => hearder.Visible(true))
                                    .AllowColumnResizing(true)
                                    .AllowColumnReordering(true)
                                    .ColumnAutoWidth(true)
                                    .ColumnChooser(c => c.Enabled(true))
                                    .ColumnFixing(c => c.Enabled(true))
                                    .ShowBorders(true)
                                    .Grouping(group => group.AutoExpandAll(true))
                                    .SearchPanel(searchPanel => searchPanel.Visible(true))
                                    .GroupPanel(groupPanel => groupPanel.Visible(true))
                                    .Paging(paging => paging.PageSize(10))
                                    .Pager(paper =>
                                    {
                                        paper.ShowPageSizeSelector(true);
                                        paper.AllowedPageSizes(new[] { 5, 10, 20 });
                                        paper.ShowInfo(true);
                                    })
                                )
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    function AddArchive(id) {
        location.href = "/doccome/addarchive/" + id;
    }
</script>

