
@{
    ViewData["Title"] = "DocGo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model IEnumerable<Data.Models.Trading_system.Document>
<style>
    .image_DocCome {
        width: 50px;
        height: 50px;
    }
    .modal-dialog {
        overflow-y: initial !important
    }

    .modal-body {
        max-height: calc(100vh - 200px);
        overflow-y: auto;
    }
</style>
<div class="right_col" role="main" style="height: 500px">
    <div class="">
        <div class="page-title">
            <div class="title_left">
                <h3>Thông tin văn bản đến</h3>
            </div>
            <div class="title_right">
                <div class="col-md-5 col-sm-5   form-group pull-right top_search">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Search for...">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button">Go!</button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        @{
            if (TempData["alertMessage"] != null)
            {
                <div style="color:red;font-size:30px">
                    @TempData["alertMessage"].ToString()
                </div>
            }
        }
        <div class="clearfix"></div>
        <div class="row" style="display: block;">
            <div class="col-md-12 col-sm-12 ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Văn bản đến</h2>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <a class="dropdown-item" href="#">Settings 1</a>
                                    <a class="dropdown-item" href="#">Settings 2</a>
                                </div>
                            </li>
                            <li>
                                <a class="close-link"><i class="fa fa-close"></i></a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="card-box table-responsive">
                                    @(Html.DevExtreme().DataGrid<Data.Models.Trading_system.Sp_GetDocCome>().ID("gridContainer")
                                    .DataSource(ds => ds.Mvc()
                                        .Controller("DocGo")
                                        .LoadAction("Get")
                                        .InsertAction("Post")
                                        .UpdateAction("Put")
                                        .DeleteAction("Delete")
                                        .Key("DocId")
                                    )
                                    .RemoteOperations(true)
                                    .Columns(columns => {

                                        columns.AddFor(m => m.DocDate).Caption("Ngày VB");

                                        columns.AddFor(m => m.DateCome).Caption("Ngày nhận");

                                        columns.AddFor(m => m.NumberCome).Caption("Số văn bản đến");

                                        columns.AddFor(m => m.Contents).Caption("Tên loại và trích yếu nội dung văn bản");

                                        columns.AddFor(m => m.DocTypeId).Caption("Hình thức").Lookup(lookup => lookup
                                        .DataSource(d => d.Mvc().Controller("lookup").LoadAction("getDoctype").Key("DocTypeId"))
                                        .DisplayExpr("TypeName")
                                        .ValueExpr("DocTypeId")
                                        );

                                        columns.AddFor(m => m.NumberSign).Caption("Số / Ký hiệu");

                                        columns.AddFor(m => m.DocPlaceId).Caption("Nơi gửi").Lookup(lookup => lookup
                                        .DataSource(d => d.Mvc().Controller("lookup").LoadAction("getDocplace").Key("DocPlaceId"))
                                        .DisplayExpr("DocPlaceName")
                                        .ValueExpr("DocPlaceId")
                                        );


                                        columns.AddFor(m => m.DocLever).Caption("Độ khẩn").Lookup(lookup => lookup.DataSource(new JS("DocLever")).ValueExpr("id").DisplayExpr("name"));

                                        columns.Add().DataField("IsChuyen").Caption("Đã chuyển");


                                    })
                                    .Editing(e => e
                                        .Mode(GridEditMode.Popup)
                                        .Popup(p => p.Title("Hàng hóa").ShowTitle(true).Width(700).Height(500))
                                        .AllowDeleting(true)
                                        .UseIcons(true)
                                    )
                                    .MasterDetail(md => {
                                        md.Enabled(true);
                                        md.Template(new TemplateName("gridContainer-details"));

                                    })
                                    .OnSelectionChanged("Change_DocId")
                                    .HoverStateEnabled(true)
                                    .ShowBorders(true)
                                    .Selection(s => s.Mode(SelectionMode.Single))
                                    .OnToolbarPreparing("toolbar_DocGo")
                                    .Export(e => e.Enabled(true))
                                    .FilterRow(filter => filter.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                    .HeaderFilter(hearder => hearder.Visible(true))
                                    .AllowColumnResizing(true)
                                    .AllowColumnReordering(true)
                                    .ColumnAutoWidth(true)
                                    .ColumnChooser(c => c.Enabled(true))
                                    .ColumnFixing(c => c.Enabled(true))
                                    .ShowBorders(true)
                                    .Grouping(group => group.AutoExpandAll(true))
                                    .SearchPanel(searchPanel => searchPanel.Visible(true))
                                    .GroupPanel(groupPanel => groupPanel.Visible(true))
                                    .Paging(paging => paging.PageSize(10))
                                    .Pager(paper =>
                                    {
                                        paper.ShowPageSizeSelector(true);
                                        paper.AllowedPageSizes(new[] { 5, 10, 20 });
                                        paper.ShowInfo(true);
                                    })
                                )
                                    @using (Html.DevExtreme().NamedTemplate("gridContainer-details"))
                                    {
                                        @(Html.DevExtreme().Form()
                                            .ElementAttr("class", "form-container")
                                            .Items(items => {
                                                items.AddSimple()
                                                    .Label(l => l.Text("List Image"))
                                                    .Editor(e => e.SelectBox()
                                                        .DataSource(d => d.Mvc()
                                                            .Controller("Lookup")
                                                            .LoadAction("getImageDocCome")
                                                            .LoadParams(new { DocId = new JS("data.DocId") })
                                                            .Key("Id")
                                                        )
                                                        .ValueExpr("FileAttach")
                                                        .DisplayExpr("FileAttach")
                                                        .OnValueChanged("image")
                                                    );
                                            })
                                    )
                                    }
                                    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                        <div class="modal-dialog modal-xl modal-dialog-scrollable" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <button type="button" class="close" onclick="Close_myModal()">&times;</button>
                                                </div>
                                                <div id="_PartiView_AddOrUpdate_Archive">

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal fade" id="Popup_img" tabindex="-1" role="dialog">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">

                                                <div class="modal-body">
                                                    <img id="img_id" style="width:100%;height:100%">
                                                </div>

                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                    <input type="text" id="DocId" hidden>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/js/js_create/doccome.js"></script>
<script>
    function Close_myModal() {
        $("#myModal").modal("hide");
    }
    function Change_DocId(selectedItems) {
        var data = selectedItems.selectedRowsData[0];
        if (data) {
            document.getElementById("DocId").value = data.DocId;
        }
    }
    function getDataGridInstance() {
        return $("#gridContainer").dxDataGrid("instance");
    }
    function image(data) {
        var id = data.value;
        var extensionFile = ["jpg", "jpeg", "png"];
        var regex = new RegExp("([a-zA-Z0-9\s_\\.\-:])+(" + extensionFile.join('|') + ")$");
        try {
            if (!regex.test(id.toLowerCase())) {
                location.href = '/DocGo/DownloadDocument/' + id;
            } else {
                document.getElementById('img_id').src = '/FileUploads/Document/' + data.value;
                $('#Popup_img').modal('show');
            }
        }
        catch {
            $.notify("something is wrong!", "error");
        }
    }
    function toolbar_DocGo(e) {
        e.toolbarOptions.items.unshift({
            location: "after",
            widget: "dxButton",
            options: {
                icon: "add",
                onClick: function () {
                    $.post('/DocGo/AddDocGo', function (response) {
                        $("#_PartiView_AddOrUpdate_Archive").html(response);
                        $("#myModal").modal("show");

                    })
                }
            }
        });
        e.toolbarOptions.items.unshift({
            location: "after",
            widget: "dxButton",
            options: {
                icon: "edit",
                onClick: function () {
                    var DocId = document.getElementById("DocId").value;
                    if (DocId) {
                        $.post('/DocGo/EditDocGo', { 'DocId': DocId }, function (response) {
                            $("#_PartiView_AddOrUpdate_Archive").html(response);
                            $("#myModal").modal("show");
                        })
                    } else {
                        $.notify("please choose the document you want to edit!", "error");
                    }
                },
            }

        })
        e.toolbarOptions.items.unshift({
            location: "after",
            widget: "dxButton",
            options: {
                text: "Lưu hồ sơ",
                onClick: function () {
                    var DocId = document.getElementById("DocId").value;
                    if (DocId) {
                        $.post('/doccome/addarchive', { 'DocId': DocId }, function (response) {
                            $("#_PartiView_AddOrUpdate_Archive").html(response);
                            document.getElementById("btn_Save").onclick = SaveForDocGo;
                            $("#myModal").modal("show");
                        })
                    }
                    else {
                        $.notify("please choose the document you want to save!", "error");
                    }
                },
            }

        })
        e.toolbarOptions.items.unshift({
            location: "after",
            widget: "dxButton",
            options: {
                text: "Gửi nội bộ",
                onClick: function () {
                    var DocId = document.getElementById("DocId").value;
                    if (DocId) {
                        $.post('/doccome/DocTransfer', { 'DocId': DocId }, function (response) {
                            $("#_PartiView_AddOrUpdate_Archive").html(response);
                            document.getElementById("Form_DocTranfer").action = "/DocCome/Doc_Transfer/" + DocId;
                            $("#myModal").modal("show");
                        })
                    }
                    else {
                        $.notify("choose the document you want to tranfer !", "error");
                    }
                },
            }

        })
    }
</script>
<!-- /page content -->
<!-- /page content -->
<!-- footer content -->
