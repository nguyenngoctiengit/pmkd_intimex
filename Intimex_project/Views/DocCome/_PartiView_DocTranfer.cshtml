@model Data.Models.Trading_system.DocProcess


<form method="post" id="Form_DocTranfer" enctype="multipart/form-data">
    <div class="modal-body">
        <div class="form-group row">
            <div class="form-group col-md-12">
                <label class="col-form-label col-md-2 col-sm-2" style="width:100%">Số/ký hiệu VB</label>
                <div class="col-md-2 col-sm-2">
                    @(Html.DevExtreme().TextBox().Disabled(true).Value(ViewBag.NumberSign))
                </div>
                <label class="col-form-label col-md-1 col-sm-1">Ngày vb</label>
                <div class="col-md-3 col-sm-3">
                    @Html.DevExtreme().DateBox().Disabled(true).Value(ViewBag.DocDate)
                </div>
                <label class="col-form-label col-md-1 col-sm-1">Loại VB</label>
                <div class="col-md-3 col-sm-3">
                    @Html.DevExtreme().TextBox().Disabled(true).Value(ViewBag.DocType)
                </div>
            </div>
        </div>
        <div class="form-group row" style="margin-bottom:0px">
            <div class="form-group col-md-12">
                <label class="col-form-label col-md-12 col-sm-12">Tên và loại trích yếu văn bản</label>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-12 col-sm-12">
                @(Html.DevExtreme().TextArea().Disabled(true).Value(ViewBag.Contents))
            </div>
        </div>
        <div class="form-group row" style="margin-bottom:0px">
            <div class="form-group col-md-2">
                <label class="col-form-label col-md-12 col-sm-12">Phân phối VB</label>
            </div>
            <div class="form-group col-md-10">
                <div class="ln_solid"></div>
            </div>
        </div>
        <div class="form-group row">
            <div class="form-group col-md-12">
                <label class="col-form-label col-md-2 col-sm-2">Thời gian giải quyết</label>
                <div class="col-md-3 col-sm-3">
                    @(Html.DevExtreme().DateBoxFor(m => m.DateLimit).DisplayFormat("dd/MM/yyyy"))
                </div>
            </div>
        </div>
        <div class="form-group row" style="margin-bottom:0px">
            <div class="form-group col-md-12">
                <label class="col-form-label col-md-12 col-sm-12">Ý kiến</label>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-12 col-sm-12">
                @(Html.DevExtreme().TextBoxFor(m => m.Command))
            </div>
        </div>
        <div class="modal fade" id="Popup_choose_receiver" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog" style="display:table">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="myModalLabel">Chọn nhân viên</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group row">
                            <div class="form-group col-md-12">
                                @(Html.DevExtreme().DataGrid<Data.Models.Trading_system.UserRight>()
                                                    .ID("grib_dsnv")
                                                    .DataSource(d => d.Mvc().LoadAction("GetUserRight")
                                                                            .Controller("DocCome")
                                                                            .Key("UserName1"))
                                                    .RemoteOperations(true)
                                                    .Columns(colunms => {

                                                        colunms.AddFor(m => m.FullName1).Caption("Tên nhân viên").Fixed(true);

                                                        colunms.Add().DataField("BranchId").Caption("Bộ phận");

                                                        colunms.Add().DataField("NameV").Caption("Chi nhánh");

                                                        colunms.AddFor(m => m.UserName1).Caption("Mã nhân viên").Fixed(true).Visible(false);





                                                    })
                                                    .FilterRow(filter => filter.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                                    .Selection(s => s.Mode(SelectionMode.Multiple).Deferred(true))
                                                    .HoverStateEnabled(true)
                                                    .FilterRow(filter => filter.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                                    .HeaderFilter(header => header.Visible(true))
                                                    .AllowColumnReordering(true)
                                                    .AllowColumnResizing(true)
                                                    .ColumnAutoWidth(true)
                                                    .ColumnChooser(c => c.Enabled(true))
                                                    .ColumnFixing(c => c.Enabled(true))
                                                    .ShowBorders(true)
                                                    .Grouping(group => group.AutoExpandAll(true))
                                                    .GroupPanel(groupPanel => groupPanel.Visible(true))
                                                    .Paging(paging => paging.PageSize(5))
                                                    .Pager(paper =>
                                                    {
                                                        paper.ShowPageSizeSelector(true);
                                                        paper.AllowedPageSizes(new[] { 5, 10, 20 });
                                                        paper.ShowInfo(true);
                                                    })
                                                )
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="ChooseReceiver()">Chọn</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group row">
            <div class="form-group col-md-12">
                <div class="col-md-10 col-sm-10">
                    <table class="table" id="ListReciever">
                        <tr>
                            <th style="display:none">
                                Mã người nhận
                            </th>
                            <th>
                                Người nhận
                            </th>
                            <th>
                                Action
                            </th>
                        </tr>
                    </table>
                </div>
                <div class="col-md-2 col-sm-2">
                    <button type="button" class="btn btn-outline-dark" onclick="OpenPopUp_Receiver()">Người nhận</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="submit" class="btn btn-success" disabled id="button_send">Lưu</button>
        <button type="button" class="btn btn-primary" onclick="update_ListReciever()">Cập nhật</button>
    </div>
</form>
<script type="text/javascript">
    function OpenPopUp_Receiver() {
        $('#Popup_choose_receiver').modal('show');
    }
    function getDataGridInstance() {
        return $("#grib_dsnv").dxDataGrid("instance");
    }

    function ChooseReceiver() {
        getDataGridInstance().getSelectedRowsData().done(function (rowData) {
            var array = []
            rowData.forEach(element => { array.push(element) })
            for (var i = 0; i < array.length; i++) {
                var markup = "<tr><td style='display: none'>" + array[i].UserName1 + "</td><td>" + array[i].FullName1 + " - " + array[i].BranchId + "</td><td><a href='#' onclick='DeleteReceiver(this,\"" + array[i].UserName1 + "\")'><span class='glyphicon glyphicon-remove red'></span></a></td></tr>";
                $("#ListReciever tbody").append(markup);
            }
            $('#Popup_choose_receiver').modal('toggle');
        })
    }
    function update_ListReciever() {
        var array_ListReciever = [];
        var ListReciever = [];
        $("#ListReciever tr:not(:first)").each(function () {
            array_ListReciever.push($(this).find("td:first").text()); //put elements into array
            array_ListReciever.forEach(element => { ListReciever.push(element.UserName1) })
        });
        if (array_ListReciever.length != 0) {
            $.ajax({
                traditional: true,
                dataType: 'json',
                type: 'POST',
                url: '/DocCome/update_ListReciever',
                data: { array_ListReciever: array_ListReciever },
                success: function (data) {
                    $.notify(data, "success");
                    document.getElementById("button_send").disabled = false;
                },
                error: function () {
                    $.notify("Something went wrong", "error");
                }
            })
        }
        else if (array_ListReciever.length == 0) {
            $.notify("please choose reciever!", "error");
        }
    }
    function DeleteReceiver(r, id) {
        var i = r.parentNode.parentNode.rowIndex;
        document.getElementById('ListReciever').deleteRow(i);
        $.post("/DocCome/DeleteReceiver", $.param({ id: id }, true));
    }
</script>

