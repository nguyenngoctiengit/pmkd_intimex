
@{
    ViewData["Title"] = "addarchive";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model IEnumerable<Data.Models.Trading_system.Archive>
<style>
    .image_DocCome {
        width: 50px;
        height: 50px;
    }
</style>
<div class="right_col" role="main" style="height: 500px">
    <div class="">
        <div class="page-title">
            <div class="title_left">
                <h3>Thông tin văn bản đến</h3>
            </div>
            <div class="title_right">
                <div class="col-md-5 col-sm-5   form-group pull-right top_search">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Search for...">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button">Go!</button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        @{
            if (TempData["alertMessage"] != null)
            {
                <div style="color:red;font-size:30px">
                    @TempData["alertMessage"].ToString()
                </div>
            }
        }
        <div class="clearfix"></div>
        <div class="row" style="display: block;">
            <div class="col-md-12 col-sm-12 ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Văn bản đến</h2>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <a class="dropdown-item" href="#">Settings 1</a>
                                    <a class="dropdown-item" href="#">Settings 2</a>
                                </div>
                            </li>
                            <li>
                                <a class="close-link"><i class="fa fa-close"></i></a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="row">
                            <div class="col-sm-12">
                                <input type="text" id="DocId" value="@ViewBag.DocId" hidden>
                                <div class="card-box table-responsive">
                                    @(Html.DevExtreme().DataGrid<Data.Models.Trading_system.Archive>().ID("dataGrib_archive")
                                    .DataSource(ds => ds.Mvc()
                                        .Controller("DocCome")
                                        .LoadAction("GetArchive")
                                        .LoadParams(new { id = ViewBag.DocId })
                                        .Key("ArchivesId")
                                    )
                                    .Columns(columns => {
                                        columns.Add().DataField("ArchivesId").Visible(false);

                                        columns.Add().DataField("ArchivesName").Caption("Ngày VB");

                                        columns.Add().DataField("IsFinish").Caption("Trạng thái");

                                        columns.Add().DataField("ArchivesType").Caption("Loại hồ sơ");
                                    })
                                    .OnToolbarPreparing("toolbar_addarchive")
                                    .Selection(s => s.Mode(SelectionMode.Multiple).Deferred(true))
                                    .HoverStateEnabled(true)
                                    .ShowBorders(true)
                                    .FilterRow(filter => filter.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                    .HeaderFilter(hearder => hearder.Visible(true))
                                    .AllowColumnResizing(true)
                                    .AllowColumnReordering(true)
                                    .ColumnAutoWidth(true)
                                    .ColumnFixing(c => c.Enabled(true))
                                    .Grouping(group => group.AutoExpandAll(true))
                                    .Paging(paging => paging.PageSize(10))
                                    .Pager(paper =>
                                    {
                                        paper.ShowPageSizeSelector(true);
                                        paper.AllowedPageSizes(new[] { 5, 10, 20 });
                                        paper.ShowInfo(true);
                                    })
                                )
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/js/js_create/doccome.js"></script>
<script>
    function getDataGridInstance() {
        return $("#dataGrib_archive").dxDataGrid("instance");
    }
    var DocId = document.getElementById('DocId').value;
    function toolbar_addarchive(e) {
        e.toolbarOptions.items.unshift({
            location: "after",
            widget: "dxButton",
            options: {
                text: "Lưu",
                onClick: function () {
                    getDataGridInstance().getSelectedRowsData().done(function (rowData) {
                        var array = []
                        rowData.forEach(element => { array.push(element.ArchivesId) })
                        $.ajax({
                            traditional: true,
                            type: 'POST',
                            url: '/DocCome/addarchive1',
                            dataType: 'JSON',
                            data: { array: array, DocId: DocId },
                            success: function (data) {
                                window.location.href = data
                            },
                            error: function (request) {
                                $.notify("Something went wrong!!", "error");
                            }
                        })
                    })
                    
                }
            }
        });
    }
</script>
<!-- /page content -->
<!-- /page content -->
<!-- footer content -->
