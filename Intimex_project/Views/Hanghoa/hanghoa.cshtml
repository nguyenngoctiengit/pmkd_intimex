@{
    ViewData["Title"] = "hanghoa";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model IEnumerable<Data.Models.Trading_system.Hanghoa>
<style>
    .modal-dialog {
        overflow-y: initial !important
    }

    .modal-body {
        max-height: calc(100vh - 200px);
        overflow-y: auto;
    }
</style>
<div class="right_col" role="main" style="height: 500px">
    <div class="">
        <div class="page-title">
            <div class="title_left">
                <h3>Thông tin hàng hóa</h3>
            </div>
            <div class="title_right">
                <div class="col-md-5 col-sm-5 form-group pull-right top_search">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Search for...">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button">Go!</button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        @{
            if (TempData["alertMessage"] != null)
            {
                <div style="color:red;font-size:30px">
                    @TempData["alertMessage"].ToString()
                </div>
            }
        }
        <div class="clearfix"></div>
        <div class="row" style="display: block;">
            <div class="col-md-12 col-sm-12 ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Hàng hóa</h2>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <a class="dropdown-item" href="#">Settings 1</a>
                                    <a class="dropdown-item" href="#">Settings 2</a>
                                </div>
                            </li>
                            <li>
                                <a class="close-link"><i class="fa fa-close"></i></a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="card-box table-responsive">
                                    @(Html.DevExtreme().DataGrid<Data.Models.Trading_system.Hanghoa>().ID("gridContainer")
                                    .DataSource(ds => ds.Mvc()
                                        .Controller("hanghoa")
                                        .LoadAction("Get")
                                        .InsertAction("Post")
                                        .UpdateAction("Put")
                                        .DeleteAction("Delete")
                                        .Key("Idhanghoa", "Mahang")
                                    )
                                    .RemoteOperations(true)
                                    .Columns(columns => {

                                        columns.AddFor(m => m.Idhanghoa).Visible(false).Caption("ID hàng hóa").AllowEditing(false);

                                        columns.AddFor(m => m.Mahang).Fixed(true).Caption("Mã hàng");

                                        columns.AddFor(m => m.Tenhang).Caption("Tên hàng");

                                        columns.AddFor(m => m.Tenhangvat).Caption("Tên hàng VAT");

                                        columns.AddFor(m => m.MaNhom).Caption("Mã nhóm").Lookup(lookup => lookup
                                        .DataSource(d => d.Mvc().Controller("lookup").LoadAction("Getnhomhang").Key("Manhom"))
                                        .DisplayExpr("Manhom")
                                        .ValueExpr("Manhom")
                                        );

                                        columns.AddFor(m => m.Dvt).Caption("DVT").Lookup(lookup => lookup
                                        .DataSource(new[] { "KGS","TAN","CAI"})
                                        );

                                        columns.AddFor(m => m.Vat).Caption("Vat").Lookup(lookup => lookup
                                        .DataSource(new[] { "0","5","10"})
                                        );

                                        columns.AddFor(m => m.Sudung).Caption("Sử dụng").Visible(false).Lookup(lookup => lookup.DataSource(new JS("sudung_hanghoa")).ValueExpr("id").DisplayExpr("name"));

                                        columns.AddFor(m => m.Fullname).Caption("Tên đầy đủ").Visible(false);

                                        columns.AddFor(m => m.Quicach).Caption("Qui cách").Visible(false);

                                        columns.AddFor(m => m.Baobi).Caption("Bao bì").Visible(false);

                                        columns.AddFor(m => m.Kiemdinh).Caption("Kiểm định").Visible(false);

                                    })
                                    .Editing(e => e
                                        .AllowDeleting(true)
                                        .UseIcons(true)
                                    )
                                    .Selection(s => s.Mode(SelectionMode.Single))
                                    .OnSelectionChanged("SelectedHangHoa")
                                    .OnToolbarPreparing("toolbarhanghoa")
                                    .Export(e => e.Enabled(true))
                                    .FilterRow(filter => filter.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                    .HeaderFilter(hearder => hearder.Visible(true))
                                    .AllowColumnResizing(true)
                                    .AllowColumnReordering(true)
                                    .ColumnAutoWidth(true)
                                    .ColumnChooser(c => c.Enabled(true))
                                    .ColumnFixing(c => c.Enabled(true))
                                    .ShowBorders(true)
                                    .Grouping(group => group.AutoExpandAll(true))
                                    .SearchPanel(searchPanel => searchPanel.Visible(true))
                                    .GroupPanel(groupPanel => groupPanel.Visible(true))
                                    .Paging(paging => paging.PageSize(10))
                                    .Pager(paper =>
                                    {
                                        paper.ShowPageSizeSelector(true);
                                        paper.AllowedPageSizes(new[] { 5, 10, 20 });
                                        paper.ShowInfo(true);
                                    })
                                )
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<input type="text" id="Idhanghoa" hidden>
<div class="modal fade" id="PopUpThemNhomHang" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <form>
                    <div class="form-group row">
                        <div class="form-group col-md-12">
                            <label class="col-form-label col-md-2 col-sm-2">Mã nhóm</label>
                            <div class="col-md-10 col-sm-10">
                                <input type="text" id="MaNhom" class="form-control">
                            </div>
                        </div>
                        <div class="form-group col-md-12">
                            <label class="col-form-label col-md-2 col-sm-2">Tên nhóm</label>
                            <div class="col-md-10 col-sm-10">
                                <input type="text" id="TenNhom" class="form-control">
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="Add()">Add</button>
            </div>
        </div>
    </div>
</div>

@*---------------------------------------------------------------------------Modal chức năng-----------------------------------------------------------------------*@
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="Close_myModal()">&times;</button>
            </div>
            <div id="_Modal_body">

            </div>
        </div>
    </div>
</div>

@*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------*@
<script type="text/javascript">
    function toolbarhanghoa(e) {
        e.toolbarOptions.items.unshift({
            location: "after",
            widget: "dxButton",
            options: {
                icon: "add",
                onClick: function () {
                    $.post('/HangHoa/AddOrEditHangHoa', function (response) {
                        $("#_Modal_body").html(response);
                        $("#myModal").modal("show");

                    })
                }
            }
        })
        e.toolbarOptions.items.unshift({
            location: "after",
            widget: "dxButton",
            options: {
                icon: "edit",
                onClick: function () {
                    var Idhanghoa = document.getElementById("Idhanghoa").value
                    $.post('/HangHoa/AddOrEditHangHoa', { 'Idhanghoa': Idhanghoa} ,function (response) {
                        $("#_Modal_body").html(response);
                        $("#myModal").modal("show");

                    })
                }
            }
        })
        e.toolbarOptions.items.unshift({
            location: "after",
            widget: "dxButton",
            options: {
                text: "Thêm nhóm hàng",
                width: 150,
                onClick: function () {
                    $("#PopUpThemNhomHang").modal("show");
                }
            }
        })
    }
    function Add() {
        var MaNhom = document.getElementById("MaNhom").value;
        var TenNhom = document.getElementById("TenNhom").value;
        $.post('/hanghoa/themnhomhang', { 'MaNhom': MaNhom, 'TenNhom': TenNhom }, function (respone) {
            $("#PopUpThemNhomHang").modal("hide");
            $.notify(respone, 'success');

        })
    }
    function SelectedHangHoa(selectedItems) {
        var data = selectedItems.selectedRowsData[0];
        if (data) {
            document.getElementById("Idhanghoa").value = data.Idhanghoa;
        }
    }

    function Close_myModal() {
        $("#myModal").modal("hide");
    }
</script>
<!-- /page content -->
<!-- /page content -->
<!-- footer content -->