
@{
    ViewData["Title"] = "Archives";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .modal-dialog {
        overflow-y: initial !important
    }

    .modal-body {
        max-height: calc(100vh - 200px);
        overflow-y: auto;
    }
</style>
<div class="right_col" role="main" style="height: 500px">
    <div class="">
        <div class="page-title">
            <div class="title_left">
                <h3>Quản lý hồ sơ - công việc</h3>
            </div>
            <div class="title_right">
                <div class="col-md-5 col-sm-5 form-group pull-right top_search">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Search for...">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button">Go!</button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        @{
            if (TempData["alertMessage"] != null)
            {
                <div style="color:red;font-size:30px">
                    @TempData["alertMessage"].ToString()
                </div>
            }
        }
        <div class="clearfix"></div>
        <div class="row" style="display: block;">
            <div class="col-md-12 col-sm-12 ">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Hồ sơ - công việc</h2>
                        <ul class="nav navbar-right panel_toolbox">
                            <li>
                                <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                            </li>
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <a class="dropdown-item" href="#">Settings 1</a>
                                    <a class="dropdown-item" href="#">Settings 2</a>
                                </div>
                            </li>
                            <li>
                                <a class="close-link"><i class="fa fa-close"></i></a>
                            </li>
                        </ul>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="card-box table-responsive">
                                    @(Html.DevExtreme().DataGrid<Data.Models.Trading_system.SP_GetArchives>().ID("gridContainer_Archive")
                                    .DataSource(ds => ds.Mvc()
                                        .Controller("Archives")
                                        .LoadAction("Get")
                                        .Key("ArchivesId")
                                    )
                                    .RemoteOperations(true)
                                    .Columns(columns => {

                                        columns.AddFor(a => a.ArchivesName).Caption("Tên công việc");

                                        columns.AddFor(a => a.Contents).Caption("Trích yếu");

                                        columns.AddFor(a => a.UserCreateName).Caption("Người tạo");

                                        columns.AddFor(a => a.DateAssign).Caption("Ngày giao");

                                        columns.AddFor(a => a.DateFinishAssign).Caption("Ngày hoàn thành");

                                        columns.AddFor(a => a.IsFinish).Caption("Hoàn thành");

                                        columns.AddFor(a => a.StatusArchiver).Caption("Trạng thái");

                                        columns.Add().Width(80).AllowFiltering(false)
                                        .AllowSorting(false).CellTemplate(@<text>
                                                <button type="button" onclick="AssignTask(<%= data.ArchivesId%>)">G.việc</button>
                                        </text>);

                                        columns.Add().Width(80).AllowFiltering(false)
                                                 .AllowSorting(false).CellTemplate(@<text>
                                                <button type="button" onclick="DocArchive(<%= data.ArchivesId%>)">V.Bản</button>
                                        </text>);

                                        columns.Add().Width(80).AllowFiltering(false)
                                                .AllowSorting(false).CellTemplate(@<text>
                                                <button type="button" onclick="DocFeedBack(<%= data.ArchivesId%>)">P.Hồi</button>
                                        </text>);

                                        columns.Add().Width(85).AllowFiltering(false)
                                                .AllowSorting(false).CellTemplate(@<text>
                                                <button type="button" onclick="DetailArchives(<%= data.ArchivesId%>)">CT C.việc</button>
                                        </text>);
                                    })
                                    .OnToolbarPreparing("toolbar_Archives")
                                    .HoverStateEnabled(true)
                                    .ShowBorders(true)
                                    .Selection(s => s.Mode(SelectionMode.Single).Deferred(true))
                                    .Export(e => e.Enabled(true))
                                    .FilterRow(filter => filter.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                    .HeaderFilter(hearder => hearder.Visible(true))
                                    .AllowColumnResizing(true)
                                    .AllowColumnReordering(true)
                                    .ColumnChooser(c => c.Enabled(true))
                                    .ColumnFixing(c => c.Enabled(true))
                                    .ColumnAutoWidth(true)
                                    .ShowBorders(true)
                                    .Grouping(group => group.AutoExpandAll(true))
                                    .SearchPanel(searchPanel => searchPanel.Visible(true))
                                    .GroupPanel(groupPanel => groupPanel.Visible(true))
                                    .Paging(paging => paging.PageSize(5))
                                    .Pager(paper =>
                                    {
                                        paper.ShowPageSizeSelector(true);
                                        paper.AllowedPageSizes(new[] { 5, 10, 20 });
                                        paper.ShowInfo(true);
                                    })
                                )

                                </div>

                                <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                    <div class="modal-dialog modal-xl modal-dialog-scrollable" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                            </div>
                                            <div id="_PartiView_AddOrUpdate_Archive">

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="~/js/js_create/doccome.js"></script>
<script type="text/javascript"> 
    


    @*-----------------------------------Archives--------------------------------*@
    function AssignTask(e) {
        $.post('/Archives/AssignTask', { 'id': e }, function (response) {
            $("#_PartiView_AddOrUpdate_Archive").html(response);
            $("#myModal").modal("show");

        })
    }

    function DocArchive(e) {
        $.post('/Archives/DocArchive', { 'id': e }, function (response) {
            $("#_PartiView_AddOrUpdate_Archive").html(response);
            $("#myModal").modal("show");

        })
    }

    function DocFeedBack(e) {
        $.post('/Archives/ArchiveFeedBack', { 'id': e }, function (response) {
            $("#_PartiView_AddOrUpdate_Archive").html(response);
            $("#myModal").modal("show");

        })
    }

    function DetailArchives(e) {
        $.post('/Archives/DetailArchives', { 'id': e }, function (response) {
            $("#_PartiView_AddOrUpdate_Archive").html(response);
            $("#myModal").modal("show");

        })
    }

    function getDataGridInstance() {
        return $("#gridContainer_Archive").dxDataGrid("instance");
    }
    function toolbar_Archives(e) {
        e.toolbarOptions.items.unshift({
            location: "after",
            widget: "dxButton",
            options: {
                text: "Thêm",
                onClick: function () {
                    $('#myModal').modal('hide');
                    $.ajax({
                        url: '/Archives/AddArchive',
                        data: {},
                        type: 'POST',
                        dataType: 'HTML',
                        success: function (response) {
                            $("#_PartiView_AddOrUpdate_Archive").html(response);
                            $("#myModal").modal("show");
                        }
                    })
                }
            }
        });
        e.toolbarOptions.items.unshift({
            location: "after",
            widget: "dxButton",
            options: {
                text: "Sửa",
                onClick: function () {
                    getDataGridInstance().getSelectedRowsData().done(function (rowData) {
                        for (var i = 0; i < rowData.length; i++) {
                            var id = rowData[i].ArchivesId;
                            if (id) {
                                $.post('/Archives/EditArchive', { 'id': id }, function (response) {
                                    $("#_PartiView_AddOrUpdate_Archive").html(response);
                                    $("#myModal").modal("show");

                                })
                            }
                            else {
                                $.notify("please choose the document you want to edit", "error");
                            }
                        }

                    })
                    
                }
            }
        });
    }
    
</script>
<!-- /page content -->
<!-- /page content -->
<!-- footer content -->
