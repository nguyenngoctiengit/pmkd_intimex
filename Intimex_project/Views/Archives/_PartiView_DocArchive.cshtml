
@model Data.Models.Trading_system.ArchivesAssignTask

<form method="post" asp-controller="Archives" asp-action="AddAssignTask" asp-route-id="@ViewBag.id">
    <div class="modal-body">
        <div class="form-group row">
            <div class="form-group col-md-12">
                <input type="text" value="@ViewBag.id" id="id" hidden>
                <label class="col-form-label col-md-1 col-sm-1">Mã CV</label>
                <div class="col-md-2 col-sm-2">
                    <input type="text" class="form-control" value="@ViewBag.ArchivesCode" disabled>
                </div>
                <label class="col-form-label col-md-1 col-sm-1">Ngày tạo</label>
                <div class="col-md-2 col-sm-2">
                    @(Html.DevExtreme().DateBox().Disabled(true).Value(@ViewBag.DateCreate))
                </div>
                <label class="col-form-label col-md-1 col-sm-1">Tên CV</label>
                <div class="col-md-5 col-sm-5">
                    <input type="text" class="form-control" value="@ViewBag.ArchivesName" disabled>
                </div>
            </div>
        </div>
        <div class="form-group row">
            <div class="form-group col-md-12">
                <label class="col-form-label col-md-1 col-sm-1">Trích yếu</label>
                <div class="col-md-11 col-sm-11">
                    <input type="text" class="form-control" value="@ViewBag.Contents" disabled>
                </div>
            </div>
        </div>
        <div class="ln_solid"></div>
        <div class="form-group row">
            <div class="form-group col-md-6">
                <table class="table" id="List_file_attach">
                    <tr>
                        <th>
                            Tên file
                        </th>
                        <th>
                            Action
                        </th>
                    </tr>
                    @{
                        foreach (var item in ViewBag.ListFileAttach)
                        {
                            <tr>
                                <td>
                                    <a data-toggle="modal" data-target="#exampleModal" data-imageid="@item.FileSource">
                                        @item.FileSource
                                    </a>
                                </td>
                                <td>
                                    <a href='#' onclick='DeleteFile(this, "@item.FileSource")'><span class='glyphicon glyphicon-remove red'></span></a>
                                </td>
                            </tr>
                        }
                    }
                </table>
            </div>
            <div class="form-group col-md-6">
                <div class="card-box table-responsive">
                    @(Html.DevExtreme().DataGrid<Data.Models.Trading_system.Sp_GetDocument_Archive>().ID("gridContainer")
                                    .DataSource(ds => ds.Mvc()
                                        .Controller("Archives")
                                        .LoadAction("GetDocument_HasArchive")
                                        .LoadParams(new { id = ViewBag.id })
                                        .DeleteAction("DeleteDocument_Archive")
                                        .Key("DocId")
                                    )
                                    .RemoteOperations(true)
                                    .Columns(columns => {

                                        columns.AddFor(m => m.NumberSign).Caption("Số văn bản");

                                        columns.AddFor(m => m.Contents).Caption("Nội dung văn bản");

                                    })
                                    .HoverStateEnabled(true)
                                    .ShowBorders(true)
                                    .Selection(s => s.Mode(SelectionMode.Single).Deferred(true))
                                    .FilterRow(filter => filter.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                    .HeaderFilter(hearder => hearder.Visible(true))
                                    .AllowColumnResizing(true)
                                    .AllowColumnReordering(true)
                                    .ColumnFixing(c => c.Enabled(true))
                                    .ColumnAutoWidth(true)
                                    .ColumnFixing(c => c.Enabled(true))
                                    .Paging(paging => paging.PageSize(5))
                                    .Pager(paper =>
                                    {
                                        paper.ShowPageSizeSelector(true);
                                        paper.AllowedPageSizes(new[] { 5, 10, 20 });
                                        paper.ShowInfo(true);
                                    })
                                )
                </div>
            </div>
        </div>
        <div class="form-group row">
            <div class="form-group col-md-6">
                <label for="Add_file_attach"  class="btn btn-secondary btn-sm">File đính kèm</label>
                <input type="file" id="Add_file_attach" onchange="uploadMultipleFile(event)" name="files" style="display:none">
            </div>
            <div class="form-group col-md-6">
                <button type="button" class="btn btn-secondary btn-sm">Add văn bản</button>
            </div>
        </div>
        <div class="modal fade" id="choose_handler_participant" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog" style="display:table">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="myModalLabel">Chọn nhân viên</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    </div>
                    <div class="modal-body">
                        <input type="text" id="choose_handler">
                        <div class="form-group row">
                            <div class="form-group col-md-12">
                                @(Html.DevExtreme().DataGrid<Data.Models.Trading_system.Sp_GetDocument_Archive>().ID("gridContainer")
                                    .DataSource(ds => ds.Mvc()
                                        .Controller("Archives")
                                        .LoadAction("GetDocument_HasArchive")
                                        .LoadParams(new { id = ViewBag.id })
                                        .DeleteAction("DeleteDocument_Archive")
                                        .Key("DocId")
                                    )
                                    .RemoteOperations(true)
                                    .Columns(columns => {

                                        columns.AddFor(m => m.NumberSign).Caption("Số văn bản");

                                        columns.AddFor(m => m.Contents).Caption("Nội dung văn bản");

                                    })
                                    .HoverStateEnabled(true)
                                    .ShowBorders(true)
                                    .Selection(s => s.Mode(SelectionMode.Single).Deferred(true))
                                    .FilterRow(filter => filter.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                    .HeaderFilter(hearder => hearder.Visible(true))
                                    .AllowColumnResizing(true)
                                    .AllowColumnReordering(true)
                                    .ColumnFixing(c => c.Enabled(true))
                                    .ColumnAutoWidth(true)
                                    .ColumnFixing(c => c.Enabled(true))
                                    .Paging(paging => paging.PageSize(5))
                                    .Pager(paper =>
                                    {
                                        paper.ShowPageSizeSelector(true);
                                        paper.AllowedPageSizes(new[] { 5, 10, 20 });
                                        paper.ShowInfo(true);
                                    })
                                )
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" id="choose_Handler_Participant">Chọn</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
    </div>
</form>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script type="text/javascript">
    function uploadMultipleFile(e) {
        var id = document.getElementById("id").value;
        var files = e.target.files;
        var formData = new FormData();
        for (var i = 0; i < files.length; i++) {
            formData.append("files", files[i]);
            formData.append("id", id);
            var extensionFile = files[i].name;
            var markup = "<tr><td><a data-toggle='modal' data-target='#exampleModal' data-imageid=" + extensionFile + ">" + extensionFile + "</a></td><td><a href='#' onclick='DeleteFile(this,\"" + extensionFile + "\")'><span class='glyphicon glyphicon-remove red'></span></a></td></tr>";
            $("#List_file_attach tbody").append(markup);
        }
        axios.post("/Archives/Add_file_attach", formData);
    }

    function OpenPopUp_Handler() {
        document.getElementById("choose_Handler_Participant").onclick = ChooseHandler;
        $('#choose_handler_participant').modal('show');
    }
    function OpenPopUp_Participant() {
        document.getElementById("choose_Handler_Participant").onclick = ChooseParticipant;
        $('#choose_handler_participant').modal('show');
    }
    function getDataGridInstance() {
        return $("#grib_dsnv").dxDataGrid("instance");
    }
    function ChooseHandler() {
        getDataGridInstance().getSelectedRowsData().done(function (rowData) {
            var array = []
            rowData.forEach(element => { array.push(element) })
            for (var i = 0; i < array.length; i++) {
                var markup = "<tr><td style='display: none'>" + array[i].UserName1 + "</td><td>" + array[i].FullName1 + " - " + array[i].BranchId + "</td><td><a href='#' onclick='DeleteHandler(this,\"" + array[i].UserName1 + "\")'><span class='glyphicon glyphicon-remove red'></span></a></td></tr>";
                $("#List_handler tbody").append(markup);
                var array_ListHandler = [];
                var ListHandler = [];
                $("#List_handler tr:not(:first)").each(function () {
                    array_ListHandler.push($(this).find("td:first").text()); //put elements into array
                    array_ListHandler.forEach(element => { ListHandler.push(element.UserName1) })
                });
                if (array_ListHandler.length != 0) {
                    $.ajax({
                        traditional: true,
                        dataType: 'json',
                        type: 'POST',
                        url: '/Archives/update_ListHandler',
                        data: { array_ListHandler: array_ListHandler },
                        success: function (data) {
                            $.notify(data, "success");
                        },
                        error: function () {
                            $.notify("Something went wrong", "error");
                        }
                    })
                }
                else if (array_ListReciever.length == 0) {
                    $.notify("please choose reciever!", "error");
                }
            }
            $('#choose_handler_participant').modal('toggle');
        })
    }
    function ChooseParticipant() {
        getDataGridInstance().getSelectedRowsData().done(function (rowData) {
            var array = []
            rowData.forEach(element => { array.push(element) })
            for (var i = 0; i < array.length; i++) {
                var markup = "<tr><td style='display: none'>" + array[i].UserName1 + "</td><td>" + array[i].FullName1 + " - " + array[i].BranchId + "</td><td><a href='#' onclick='DeleteParticipant(this,\"" + array[i].UserName1 + "\")'><span class='glyphicon glyphicon-remove red'></span></a></td></tr>";
                $("#List_Participants tbody").append(markup);
                var array_ListParticipant = [];
                var ListParticipant = [];
                $("#List_Participants tr:not(:first)").each(function () {
                    array_ListParticipant.push($(this).find("td:first").text()); //put elements into array
                    array_ListParticipant.forEach(element => { ListParticipant.push(element.UserName1) })
                });
                if (array_ListParticipant.length != 0) {
                    $.ajax({
                        traditional: true,
                        dataType: 'json',
                        type: 'POST',
                        url: '/Archives/update_ListParticipant',
                        data: { array_ListParticipant: array_ListParticipant },
                        success: function (data) {
                            $.notify(data, "success");
                        },
                        error: function () {
                            $.notify("Something went wrong", "error");
                        }
                    })
                }
                else if (array_ListParticipant.length == 0) {
                    $.notify("please choose reciever!", "error");
                }
            }
            $('#choose_handler_participant').modal('toggle');
        })
    }
    function DeleteHandler(r, id) {
        var i = r.parentNode.parentNode.rowIndex;
        document.getElementById('List_handler').deleteRow(i);
        $.post("/Archives/DeleteList_handler", $.param({ id: id }, true));
    }
    function DeleteParticipant(r, id) {
        var i = r.parentNode.parentNode.rowIndex;
        document.getElementById('List_Participants').deleteRow(i);
        $.post("/Archives/DeleteList_participant", $.param({ id: id }, true));
    }
    function DeleteFile(r, extensionFile) {
        var i = r.parentNode.parentNode.rowIndex;
        document.getElementById('List_file_attach').deleteRow(i);
        try {
            $.post("/Archives/DeleteFileAttach", $.param({ extensionFile: "1", id = "12" }, true));
        }
        catch {
            $.notify("something wrong", "error");
        }
    }
</script>